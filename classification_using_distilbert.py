# -*- coding: utf-8 -*-
"""Classification using DistilBERT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1emQOFi-qgtNh0LIzishkgw4jUVk88tGe
"""

!pip install ktrain

import ktrain

from ktrain import text
from sklearn.datasets import fetch_20newsgroups

catgories =['rec.motorcycles','rec.sport.baseball','comp.graphics','sci.space']

train = fetch_20newsgroups(
    subset='train',
    categories=catgories,
    shuffle =True,
    random_state=0 #to repreduce the same result everytime i run this cell
)

test = fetch_20newsgroups(
    subset='test',
    categories=catgories,
    shuffle =True,
    random_state=0 #to repreduce the same result everytime i run this cell
)

test.target_names

X_train = train.data
y_train = train.target

X_test = test.data
y_test = test.target

"""## Build ML Model with Transformer"""

Model_name = "distilbert-base-cased"
trans = text.Transformer(Model_name,maxlen=512, class_names=catgories)

train_data = trans.preprocess_train(X_train, y_train)
test_data = trans.preprocess_test(X_test, y_test)

model = trans.get_classifier() #distill bert classifier

learner = ktrain.get_learner(model, train_data=train_data, val_data=test_data, batch_size=16) #val_data=validation data

#learner.lr_find(show_plot=True, max_epochs=10) #it will take a long time

learner.fit_onecycle(1e-4,1) #val_accuracy> train accuracy we can so run for more than one epoc so you can improve the overall accuracy

learner.validate() # 0 feature 1(categorie1)

learner.view_top_losses(n=5, preproc=trans)

"""means 924 was classified as hardware but is basebal


```
# X_test[924]
```



"""

import re
def cleanResume(resumeText):
    resumeText = re.sub('httpS+s*', ' ', resumeText)  # remove URLs
    resumeText = re.sub('RT|cc', ' ', resumeText)  # remove RT and cc
    resumeText = re.sub('#S+', '', resumeText)  # remove hashtags
    resumeText = re.sub('@S+', '  ', resumeText)  # remove mentions
    resumeText = re.sub('[%s]' % re.escape("""!"#$%&'()*+,-./:;<=>?@[]^_`{|}~â€¢"""), ' ', resumeText)  # remove punctuations
    #resumeText = re.sub(r'[^x00-x7f]',r' ', resumeText) 
    resumeText = re.sub('\r\n\r', ' ', resumeText)  # remove extra whitespace  
    resumeText = re.sub('\r\n', ' ', resumeText) 
    resumeText = re.sub(r'\\n', ' ', resumeText) 
    resumeText = re.sub(r'\n', ' ', resumeText) 
    return resumeText

for i in range(len(X_test)):
   X_test[i]=cleanResume(X_test[i])

"""# Predict on new data"""

X_test[150]

predictor = ktrain.get_predictor(learner.model, preproc=trans)

x= """ce my childhood"""

predictor.predict(X_test[150])